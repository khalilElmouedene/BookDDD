// <auto-generated />
using System;
using BookDDD.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookDDD.Infrastructure.Migrations
{
    [DbContext(typeof(KavaabookDataContext))]
    [Migration("20211007091759_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KavaabookDDD.Core.Entities.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommentaireStatut")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRemove")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemove")
                        .HasColumnType("bit");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("RemovedReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembreId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.Membre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRemove")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRemove")
                        .HasColumnType("bit");

                    b.Property<int>("MembreStatut")
                        .HasColumnType("int");

                    b.Property<string>("RemovedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlPicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Membres");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.ObjectValue.CommentSignal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int?>("MembreSignalCommentId")
                        .HasColumnType("int");

                    b.Property<int>("MembreSignalId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CommentsId");

                    b.HasIndex("MembreId");

                    b.HasIndex("MembreSignalCommentId");

                    b.ToTable("CommentSignal");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.ObjectValue.PostSignal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("MembreSignalId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembreId");

                    b.HasIndex("MembreSignalId");

                    b.HasIndex("PostId");

                    b.ToTable("PostSignal");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.ObjectValue.Reacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TypeReact")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MembreId");

                    b.HasIndex("PostId");

                    b.ToTable("Reacts");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.ObjectValue.SignalMembre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommenterSignaler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MembreSignaledId")
                        .HasColumnType("int");

                    b.Property<int>("MembreWhoSignalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MembreSignaledId");

                    b.HasIndex("MembreWhoSignalId");

                    b.ToTable("SignalMembre");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRemove")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemove")
                        .HasColumnType("bit");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("PostStatuts")
                        .HasColumnType("int");

                    b.Property<string>("RemovedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlsImg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembreId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.Comments", b =>
                {
                    b.HasOne("KavaabookDDD.Core.Entities.Membre", null)
                        .WithMany("Comments")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KavaabookDDD.Core.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.ObjectValue.CommentSignal", b =>
                {
                    b.HasOne("KavaabookDDD.Core.Entities.Comments", null)
                        .WithMany("CommentSignals")
                        .HasForeignKey("CommentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KavaabookDDD.Core.Entities.Membre", "MembreOwnerComment")
                        .WithMany("CommentSignals")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KavaabookDDD.Core.Entities.Membre", "MembreSignalComment")
                        .WithMany()
                        .HasForeignKey("MembreSignalCommentId");

                    b.Navigation("MembreOwnerComment");

                    b.Navigation("MembreSignalComment");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.ObjectValue.PostSignal", b =>
                {
                    b.HasOne("KavaabookDDD.Core.Entities.Membre", "Membre")
                        .WithMany("PostSignals")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KavaabookDDD.Core.Entities.Membre", "MembreSignal")
                        .WithMany()
                        .HasForeignKey("MembreSignalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KavaabookDDD.Core.Entities.Post", "Post")
                        .WithMany("PostSignals")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Membre");

                    b.Navigation("MembreSignal");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.ObjectValue.Reacts", b =>
                {
                    b.HasOne("KavaabookDDD.Core.Entities.Membre", null)
                        .WithMany("Reacts")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KavaabookDDD.Core.Entities.Post", "Post")
                        .WithMany("Reacts")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.ObjectValue.SignalMembre", b =>
                {
                    b.HasOne("KavaabookDDD.Core.Entities.Membre", "MembreSignaled")
                        .WithMany("MembresSignal")
                        .HasForeignKey("MembreSignaledId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KavaabookDDD.Core.Entities.Membre", "MembreWhoSignal")
                        .WithMany("MembresWhoSignaled")
                        .HasForeignKey("MembreWhoSignalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MembreSignaled");

                    b.Navigation("MembreWhoSignal");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.Post", b =>
                {
                    b.HasOne("KavaabookDDD.Core.Entities.Membre", null)
                        .WithMany("Posts")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.Comments", b =>
                {
                    b.Navigation("CommentSignals");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.Membre", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("CommentSignals");

                    b.Navigation("MembresSignal");

                    b.Navigation("MembresWhoSignaled");

                    b.Navigation("Posts");

                    b.Navigation("PostSignals");

                    b.Navigation("Reacts");
                });

            modelBuilder.Entity("KavaabookDDD.Core.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostSignals");

                    b.Navigation("Reacts");
                });
#pragma warning restore 612, 618
        }
    }
}
